export ZSHDIR=$HOME/config/dotfiles/zsh
export LOCALDIR=$HOME/.zsh_local
export PATH=$PATH:$HOME/.bin
 
# load extra modules
autoload -U zmv
autoload -U run-help
autoload -U run-help-git
autoload -U run-help-svn

zmodload -i zsh/complist

#OPTIONS
setopt no_warn_create_global                ### Don't warn if a function creates a global variable
setopt no_all_export                        ### Don't export variables automatically
### {in,out}put options

setopt        clobber                       ### allow '>' to truncate, and '>>' to create files
setopt        correct                       ### try to correct the spelling of commands
setopt     no_correct_all                   ### don't try to correct every word
setopt        flow_control                  ### flowcontrol (usually) ^S ^Q
setopt        hash_cmds                     ### hash executed commands
setopt        hash_dirs                     ### hash dirs of executed commands
setopt     no_ignoreeof                     ### ignore ^D
setopt        interactive_comments          ### allow comments in interactive shells
setopt        path_dirs                     ### eg. '/usr/bin/' is in your $path, and there is a command
                                            ###   '/usr/bin/X11/xinit' you can start it by 'X11/xinit'
setopt     no_print_exit_value              ### if a command returns non-zero, tell the user
setopt        rm_star_silent                ### do not query the user before execing 'rm *' or 'rm path/*'
setopt        short_loops                   ### allow short loop forms
setopt     no_sun_keyboard_hack             ### if a line ends with a backquote, and there are an odd number of
                                            ###   backquotes on the line, ignore the trailing backquote.
setopt     no_mail_warning                  ### print warning if a mail file has been accessed since the shell last checked.
setopt     no_rm_star_wait                  ### like 'rm_star_silent' but wait ten seconds instead of querying
setopt    aliases                       ### expand aliases

### expansion+globbing options

setopt        bad_pattern                   ### if a pattern or glob is badly formed, print out an error
setopt        brace_ccl                     ### echo {abc.}file :: .file afile bfile cfile
setopt     no_csh_nullglob                  ### only report an error if _all_ globs for a command fail
setopt        equals                        ### the mighty =command expansion :)
setopt        extended_glob                 ### the force is strong with this one...
setopt        glob                          ### abso-freakin-lutely
setopt     no_glob_assign                   ### if set, allow 'name=*' and 'name=(*)';
                                            ###   since the latter is more clear, i'm unsetting this option
setopt     no_glob_dots                     ### don't require a leading dot for matching "hidden" files
setopt     no_glob_subst                    ### foo="*"; print $foo; will print all files; not for me, thanks
setopt       brace_expand                   ### perform brace expansion
setopt     no_magic_equal_subst             ### do expansions on everything the looks like an 'name=express' assignment.
setopt     no_mark_dirs                     ### append '/' to dirnames generated by globbing
setopt     no_nomatch                       ### print an error if a glob didn't return a result
setopt     no_nullglob                      ### is a glob does not return matches, remove the glob from the
                                            ###   argumentlist instead of reporting an error
setopt     no_numeric_glob_sort             ### sort filenames numerically rather than lexicographically, if possible.
setopt        rc_expand_param               ### array  expansions of the form `foo${xx}bar', where the parameter
                                            ###   'xx' is set to (a b c), are substituted with `fooabar foobbar foocbar'
                                            ###   instead of the default `fooa b cbar'.
setopt     no_sh_glob                       ### make globbing more 'sh-like'; please, no!
setopt        unset                         ### treat unset parameters as if they were empty when substituting.
setopt    bare_glob_qual                ### treat trailing set of parentheses as a qualifier list
    setopt no_ksh_glob                      ### a [\+\*@\?\!] that precedes a pair of parentheses affects globbing.
setopt    case_glob                     ### make globbing case sensitive
setopt    multibyte                     ### respect multibyte characters when found in strings
setopt    case_match                    ### make regular expression matches case sensitive
setopt    rematch_pcre                  ### use pcre style regular expressions, if pcre is available

### history options

setopt        append_history                ### when exiting, append history entries to $HISTFILE, rather
                                            ###   than replacing the old file; this is the default
setopt        hist_expand                   ### enable '!' history expansion
setopt     no_extended_history              ### additional info in $HISTFILE
setopt     no_hist_allow_clobber            ### add '|' to output redirections in the history.
setopt     no_hist_beep                     ### beep? beep yourself!eleven!!
setopt        hist_ignore_dups              ### don't add entered command to history, if it's a dup of the previous event.
setopt        hist_ignore_space             ### if the commandline starts with a whitespace, don't add it to history
setopt        hist_no_store                 ### dont add 'history' command (fc -l) to the history
setopt hist_reduce_blanks            ### remove unneeded blanks from commands in history
setopt hist_verify                   ### bullet-proof history-expansion
setopt    hist_ignore_all_dups          ### if the entered command is a dup, remove the old one from history.
setopt    hist_save_no_dups             ### don't write dups to $HISTFILE
setopt    inc_append_history            ### append every single command to $HISTFILE immediately after hitting ENTER.
setopt    share_history                 ### always import new commands from $HISTFILE (see 'inc_append_history')
setopt no_hist_subst_pattern            ### history substitutions (:s, :&) performed with patterns instead of strings

### completion options

setopt        always_last_prompt            ### if zsh prints out a list (eg. on an ambiguous completion), it reuses
                                            ###   the old prompt instead of printing a new one underneath the list;
                                            ###   this breaks menucompletion if turned off
setopt        always_to_end                 ### if a completion is performed with the cursor within a word, and a full
                                            ###   completion is inserted, the cursor is moved to the end of the word;
setopt        auto_list                     ### autom. list choices on ambiguous completion
setopt     no_auto_name_dirs                ### any parameter that is set to the absolute name of a directory
setopt     no_auto_param_keys               ### intelligently remove automatically inserted characters when completing
setopt        auto_param_slash              ### when completing a directory name add a slash instead of a space
setopt        auto_remove_slash             ### intelligently remove the trailing slash from a completed directory
setopt        complete_aliases              ### don't expand aliases _before_ completion has finished
setopt        complete_in_word              ### if unset the cursor is set to the end of the word if completion is started
setopt        list_ambiguous                ### complete as much of a completion until it gets ambiguous.
setopt     no_list_beep                     ### how about --- NO!
setopt        list_types                    ### identify filetype by a trailing marker in completion lists
setopt        menu_complete                 ### always use menu completion
setopt        hash_list_all                 ### force entire path of a completion to be hashed
setopt     no_rec_exact                     ### in completion, recognize exact matches even if they are ambiguous.

setopt no_list_packed                   ### try to make completion lists smaller (but ugly)
setopt no_list_rows_first               ### lay out matches in completion lists horizontally

### script+function options

setopt     no_err_exit                      ### if set, execute ZERR trap and exit if a command returns non-zero
setopt        exec                          ### yes, _do_ run the commands i enter.
setopt        function_arg_zero             ### set ${0} to the function/script name
setopt        local_options                 ### shell options are to be restored after returning from a shell function
setopt        multios                       ### enable multiple redirections
setopt     no_verbose                       ### print shell input lines as they are read.
setopt     no_xtrace                        ### same as 'set -x'
setopt    local_traps                   ### similar to 'local_options', but works on traps
setopt    local_options
setopt    octal_zeroes                  ### print octal values the '0741' way
setopt    c_bases                       ### output hex-numbers in '0x1F' format (see 'octal_zeroes')
setopt no_err_return                    ### similar to 'err_exit' but a 'return' would be executed rather than an 'exit'
setopt no_typeset_silent                ### if this is unset, executing any of the 'typeset' family of commands
                                            ###   with no options and a list of parameters that have no values to be
                                            ###   assigned but already exist will display the value of the parameter.
                                            ###   if the option is set, they will only be shown when parameters are
                                            ###   selected with the '-m' option. the option '-p' is available whether
                                            ###   or not the option is set.
setopt    eval_lineno                   ### linenumbers of expressions in 'eval' are tracked seperately
                                        ###   in a function
setopt    debug_before_cmd              ### run the DEBUG trap *before* each command

### job control options

setopt     auto_resume                      ### if a command was suspened and restarted resume the suspended
setopt     no_bg_nice                       ### run background jobs at lower priority
setopt     no_hup                           ### send SIGHUP to background processes on exit.
setopt        long_list_jobs                ### list jobs in the long format by default
setopt        monitor                       ### allow job control
setopt        notify                        ### report status of background jobs immediately
setopt    check_jobs                    ### report status of bg-jobs if exiting a shell with job control enabled
setopt no_auto_continue                 ### if set, stopped jobs are disowned and restarted immediately

### prompt options

setopt     no_prompt_cr                     ### print '\r' before printing the prompt.
setopt        prompt_subst                  ### turn on various expansions in prompts
setopt no_prompt_bang                   ### if set, '!' is treated specially in prompt expansion.
setopt    prompt_percent                ### if set, '%' is treated specially in prompt expansion.
setopt    transient_rprompt             ### remove any right prompt from display when accepting a command line.
setopt no_prompt_sp                     ### attempt to preserve partial lines (no effect if 'prompt_cr' is unset).

### line editor options

setopt     no_beep                          ### beep on error in zle
setopt     no_overstrike                    ### start zle in overstrike mode
setopt     no_single_line_zle               ### switch of multiline editing
setopt        zle                           ### use the zsh-line-editor
setopt vi                            ### bindkey -v equivalent

### state options

setopt     no_privileged                    ### turn on privileged mode.
setopt     no_rc_quotes                     ### allow the character sequence _''_ to signify a single quote
                                            ###   within singly quoted strings. note this does not apply in quoted strings
setopt no_restricted                    ### turn on restricted mode.
setopt no_single_command                ### make the shell exit after the first command from stdin

### chdir options

setopt        auto_pushd                    ### make cd push the old directory to the dirstack
setopt        chase_links                   ### _just_don't_lie_to_me_
setopt        pushd_ignore_dups             ### don't push dups on the dirstack
setopt        pushd_minus                   ### Exchanges the meanings of `+' and `-' when used with a number to
                                            ###   specify a directory in the stack.
setopt     no_pushd_silent                  ### do not print the dirstack after popd/pushd
setopt    chase_dots                    ### _just_don't_lie_to_me_
setopt        autocd

# load config files
function load_config() {
    [[ -f $1 ]] && source $1
}

if [[ -d $ZSHDIR ]] {
    #load_config $ZSHDIR/options
    load_config $ZSHDIR/colors
    fpath=($ZSHDIR/functions $fpath)
    load_config $ZSHDIR/dirhash
    load_config $ZSHDIR/alias
    load_config $ZSHDIR/functions/common
    load_config $ZSHDIR/abbrev_expansion
    load_config $ZSHDIR/completion
    load_config $ZSHDIR/extensions
    load_config $ZSHDIR/bindkey
    load_config $LOCALDIR/zshrc
    
    if [[ -f $ZSHDIR/prompt ]] {
        source $ZSHDIR/prompt
    } else {
        export PROMPT="%F{green}%~ %#> %F{white}"
    }
    load_config $ZSHDIR/style
}

HISTFILE=~/.zshhistory
HISTSIZE=5000
SAVEHIST=8000

export EDITOR=vim
export LESS=most
export PAGER=most

if [[ -z "$SSH_CONNECTION" ]] {
	source ~/.keychain/$HOST-sh
}
