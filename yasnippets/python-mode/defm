# -*- coding: utf-8 mode: snippet -*-
# name: Define Method
# key: defm
# contributor: Orestis Markou
# contributor: Yasser González Fernández <yglez@uh.cu>
# contributor: Michael Markert <markert.michael@googlemail.com>
# --
def ${1:name}(self, $2):
    """$3
    ${2:$(let ((indent (concat "\n" (make-string (current-column) 32)))
               (args (mapcar 'car
                              (mapcar '(lambda (x) (split-string x "="))
                                       (split-string (replace-regexp-in-string "[[:blank:]]*" "" text)
                                                     "," t)))))
  (when args
    (concat indent "Arguments:" indent
            (mapconcat (lambda (x)
                         (format "- %s%s:%s" (char-to-string 96) x (char-to-string 96)))
                       args
                       indent))))
    }
    """
    $0