" Search, Quick Nav
command! -nargs=* d tabopen https://duckduckgo.com/?q=<args>&v=
command! -nargs=* s tabopen https://ssl.scroogle.org/cgi-bin/nbbwssl.cgi?Gw=<args>
command! -nargs=* g tabopen https://encrypted.google.com/search?q=<args>

command! -nargs=* pypi tabopen http://pypi.python.org/pypi?%3Aaction=search&term=<args>&submit=search
command! py tabopen http://python.org
command! -nargs=? pydoc tabopen http://docs.python.org/<args>
command! -nargs=1 pylib tabopen http://docs.python.org/library/<args>.html

command! -nargs=* wp tabopen http://en.wikipedia.org/wiki/Special:Search?go=Go&search=<args>
command! -nargs=* wpd tabopen http://de.wikipedia.org/wiki/Special:Search?go=Go&search=<args>
command! -nargs=* dict tabopen http://www.dict.cc/?s=<args>
command! -nargs=* beo tabopen http://dict.tu-chemnitz.de/dings.cgi?lang=de&service=deen&query=<args>
command! -nargs=* leo tabopen http://dict.leo.org/ende?lp=ende&lang=de&searchLoc=0&cmpType=relaxed&sectHdr=on&spellToler=on&pinyin=diacritic&search=<args>&relink=on
command! -nargs=* zdf tabopen http://www.zdf.de/ZDFmediathek/#/suche/<args>

command! ril sidebar! Read It Later

set guioptions=sMBC
set editor="emacsclient -c --alternate-editor=gvim"

set mapleader=","
set hlfind
set hintmatching=contains
set newtab+=help
set hintkeys=asdfghjkl;

map -g user <A-a> -silent -ex dialog addbookmark
map -g user <A-b> -silent -ex tabopen chrome://browser/content/places/places.xul
map -g user <C-l> -silent -ex nohlfind

" Tabs
map -g user <leader>n -silent -ex tabnext
map -g user <leader>p -silent -ex tabprev
map -g user <C-right> -silent -ex tabnext
map -g user <C-left> -silent -ex tabprev
map -g user <leader>f -silent -ex tabrewind
map -g user <leader>l -silent -ex tablast
map -g user <leader>d -silent -ex tabduplicate

" Movement
inoremap <C-f> <right>
inoremap <C-b> <left>
inoremap <A-f> <C-right>
inoremap <A-b> <C-left>
inoremap <C-h> <BS>
inoremap <C-w> <C-BS>

nnoremap -count <C-S-d> <scroll-up>
nnoremap -count <C-S-u> <scroll-down>
nnoremap -count <C-S-f> <scroll-page-up>
nnoremap -count <C-S-b> <scroll-page-down>

nnoremap j 5j
nnoremap k 5k
nnoremap <C-e> 10<C-e>
nnoremap <C-y> 10<C-y>

" NoScript
map -g user <A-s> :set nss!=<A-Tab>
map -g user <A-C-s> set nso!=<A-Tab>
map -g user <A-S-s> :set nst!=<A-Tab>

" Instapaper -- depends on instapaper bookmarklet with `readlater' keyword
command! instapaper -ex open readlater
map -g user <A-r> -ex instapaper<CR>

" Org
command! store-link -javascript
   \ -desc 'Store link for Orgmode'
   \ io.system('emacsclient -c "org-protocol:/store-link:/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '"')
command! capture -javascript
   \ -desc 'Capture URL with selection in Orgmode.'
   \ io.system('emacsclient -c "org-protocol:/capture:/x/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '/'
   \ + encodeURIComponent(window.getSelection()) + '"')

command! save-link -javascript
   \ -desc 'Save link in Orgmode.'
   \ io.system('emacsclient -c "org-protocol:/capture:/s/'
   \ + encodeURIComponent(buffer.URL) + '/'
   \ + encodeURIComponent(buffer.title) + '"')

map -g user <A-w> -ex save-link
map -g user <A-l> -ex store-link

" UTM trimmer, based on http://pentablg.blogspot.com/2011/05/tip-of-day-mapping-javascript.html
command! yank-utm -javascript -desc 'yank utm-trimmed url'
   \ let url = buffer.URL;
   \ let utm = url.indexOf('?utm');
   \ if ( utm > 0 ) {
   \     url = url.substring(0, utm);
   \     dactyl.clipboardWrite(url, true);
   \}

map -g user <Leader>y -ex yank-utm
